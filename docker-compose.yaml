version: '3.8'

services:


  redis:
  # I'll also build a redis image, so it will be as a Message Broker for celery
    image: redis:7.0.11-alpine


  django:
    container_name: django_celery_redis
      # Name of the container created

    build:
      context: ./django_celery_redis
      # The folder of the project, where the Dockerfile will be located
      # with instructions of building
      # I can also specify the path of the Dockerfile with other instructions, 
      # but as I will call it Dockerfile, it will look in a context folder automatically

    command: python manage.py runserver 0.0.0.0:8000
    volumes:
    # I set the mounted directory which will be copied to the image
    # And also set the path to where it should be copied
      - ./django_celery_redis:/usr/src/app/
    ports:
      - 8001:8000
    environment:
    # I set up an environmental variables
      - DEBUG=1
      - SECRET_KEY=ALSKDKJASDKLAJSDKLJASDKJSAD
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
    # Here, I set a dependency of redis, so this service will not be built,
    # until redis image is finished building.
      - redis


  # There are multiple way to build a celery worker, 
  # Sometimes it is a good approach to copy all the application of django 
  # so Celery can have access to the application code in case it needes,
  # but it is not always the case
  # Most of the configurations are very similar to the django application.
  # the only difference, I don't run COMMAND, we don't run a server here
  # ---------------------------------------------------------------------
  # Why I don't need to set ports on another services like redis or celery?
  # Because in django app, I need to access to the app outside of container, 
  # In case of Celery and Redis, as they are in the same Docker environment as 
  # application and they can communicate internally.
  celery:
    container_name: celery
    build:
      context: ./django_celery_redis
    volumes:
      - ./django_celery_redis:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=ALSKDKJASDKLAJSDKLJASDKJSAD
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    depends_on:
      - redis